
class Solution {
    public static boolean is_possible_to_get_seats(int n, int m, int[] seats) {
        if (n == 0) {
            return true;
        }
        
        if (m == 1) {
            if (seats[0] != 0 && m >= 1) {
                return false;
            } else if (seats[0] == 0 && m > 1) {
                return false;
            } else if (seats[0] == 0 && m == 1) {
                return true;
            }
        }
        
        for (int i=0; i < m; i++) {
            if (i == 0 && i + 1 < m && seats[i] == 0 && seats[i + 1] == 0) {
                seats[i] = 1;
                n--;
            } else if (i == m - 1 && i - 1 >= 0 && seats[i] == 0 && seats[i - 1] == 0) {
                seats[i] = 1;
                n--;
            } else if (i + 1 < m && i - 1 >= 0 && seats[i] == 0 && seats[i - 1] == 0 && seats[i + 1] == 0) {
                seats[i] = 1;
                n--;
            }
        }
        
        if (n > 0) {
            return false;
        }

        return true;
    }
}
