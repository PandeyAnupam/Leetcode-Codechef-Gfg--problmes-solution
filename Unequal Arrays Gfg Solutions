
class Solution {
    public static long solve(int N, int[] A, int[] B) {
             int sumA = 0, sumB = 0;
       List<Integer> oddA = new ArrayList<>();
       List<Integer> oddB = new ArrayList<>();
       List<Integer> evenA = new ArrayList<>();
       List<Integer> evenB = new ArrayList<>();
       
       for(int i = 0 ; i < N; i++){
           sumA += A[i];
           sumB += B[i];
           if(A[i] % 2 != 0){
               oddA.add(A[i]);
           }else{
               evenA.add(A[i]);
           }
           
            if(B[i] % 2 != 0){
               oddB.add(B[i]);
           }else{
               evenB.add(B[i]);
           }
       }
       if(sumA != sumB)
       return -1;
       if(oddA.size() != oddB.size() || evenA.size() != evenB.size())
       return -1;
       
       Collections.sort(oddA);
       Collections.sort(oddB);
       Collections.sort(evenA);
       Collections.sort(evenB);
       
       long total = 0;
       for(int i = 0 ; i < oddA.size(); i++){
           total += (Math.abs(oddA.get(i) - oddB.get(i)))/2;
       }
       for(int i = 0 ; i < evenA.size(); i++){
           total += (Math.abs(evenA.get(i) - evenB.get(i)))/2;
       }  
       return total/2;
    }
}
        
